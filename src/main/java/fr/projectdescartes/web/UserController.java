package fr.projectdescartes.web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import fr.projectdescartes.domain.User;
import fr.projectdescartes.repository.UserRepository;

@Component
@RestController
@RequestMapping(path="/users")
public class UserController {

	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	
	@RequestMapping(method = RequestMethod.POST)
	public User createUser(@RequestBody User user) {
 		return this.userRepository.save(user);	
	}
	
	@RequestMapping(method = RequestMethod.POST, path = "/login")
	public User login(@RequestParam String login, @RequestParam String password) {
 		return this.userRepository.findByUsernameAndPassword(login, password);	
	}
	
	@GetMapping(path= "/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
		, @RequestParam String password) {
	// @ResponseBody means the returned String is the response, not a view name
	// @RequestParam means it is a parameter from the GET or POST request
	
		User u = new User();
		u.setUsername(name);
		u.setPassword(password);
		userRepository.save(u);
		return name ;
	}
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
	// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
	@GetMapping(path="/checkUserExists")
	public @ResponseBody boolean findByLogin(@RequestParam String login) {
	// This returns a JSON or XML with the users
		if(userRepository.findByUsername(login) != null) {
			return true;
		}
		else {
			return false;
		}
	}
	
	@GetMapping(path="/connectUser")
	public @ResponseBody boolean findByLoginAndPassword(@RequestParam String login, @RequestParam String password) {
	// This returns a JSON or XML with the users
		if(userRepository.findByUsernameAndPassword(login, password) != null) {
			return true;
		}
		else {
			return false;
		}
	}
	
}
